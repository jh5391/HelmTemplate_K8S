# Default values for mychart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: nginx
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""
namespace: ""

# 전역 환경 변수
env: []
# - name: ENV_NAME
#   value: value
# - name: ENV_NAME_FROM_SECRET
#   valueFrom:
#     secretKeyRef:
#       name: secret-name
#       key: secret-key

# 전역 리소스 기본값 - 컴포넌트 별로 재정의 가능
resources:
  limits:
    cpu: 1
    memory: 1Gi
  requests:
    cpu: 100m
    memory: 128Mi

# 전역 지속성 설정 - 컴포넌트별로 재정의 가능
persistence:
  enabled: false
  storageClassName: gp2
  accessMode: ReadWriteOnce
  size: 10Gi
  annotations: {}

# AWS related configurations
aws:
  # Region where EKS cluster is deployed
  region: "us-east-1"
  
# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
    # eks.amazonaws.com/role-arn: arn:aws:iam::123456789012:role/my-app-role
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 80
  # 서비스 추가 설정
  annotations: {}
  labels: {}
  # 헤드리스 서비스 옵션
  headless:
    enabled: false
  # 다중 포트 지원
  additionalPorts: []
  # - name: metrics
  #   port: 9090
  #   targetPort: metrics

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  # 인그레스 컨트롤러 유형
  controllerType: "" # 가능한 값: "nginx", "alb", "traefik" 등
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    
    # AWS ALB 관련 어노테이션 예시
    # alb.ingress.kubernetes.io/scheme: internet-facing
    # alb.ingress.kubernetes.io/target-type: ip
    # alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    # alb.ingress.kubernetes.io/healthcheck-path: /health
    # alb.ingress.kubernetes.io/healthcheck-interval-seconds: '15'
    # alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    # alb.ingress.kubernetes.io/success-codes: '200'
    # alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    # alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'
    
    # Route53/ExternalDNS 관련 어노테이션 예시
    # external-dns.alpha.kubernetes.io/hostname: app.example.com
    # external-dns.alpha.kubernetes.io/ttl: "300"
    
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
  

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

# 스타트업 프로브 추가
startupProbe:
  enabled: false
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 10
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 30

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80
  # 추가 메트릭 설정
  additionalMetrics: []
  # - type: Resource
  #   resource:
  #     name: memory
  #     target:
  #       type: Utilization
  #       averageUtilization: 80

# ConfigMap 설정
configMaps:
  # 기본 ConfigMap
  default:
    enabled: false
    data: {}
    # key: value
  # 애플리케이션 ConfigMap
  app:
    enabled: false
    data: {}
    # application.yaml: |
    #   key: value

# Secrets 설정
secrets:
  # 기본 Secret
  default:
    enabled: false
    data: {}
    # key: dmFsdWU=  # base64 encoded
  # 애플리케이션 Secret
  app:
    enabled: false
    data: {}
    # secret.yaml: |
    #   key: value

# Additional volumes on the output Deployment definition.
volumes: []
# - name: config-volume
#   configMap:
#     name: special-config
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: config-volume
#   mountPath: "/etc/config"
#   readOnly: true

# 노드 선택기, 톨러레이션, 어피니티 설정
nodeSelector: {}

tolerations: []

affinity: {}

# 네트워크 정책
networkPolicy:
  enabled: false
  # 허용할 인그레스 소스
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: app-name
  # 허용할 이그레스 대상
  egress:
    - to:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: app-name

# Pod Disruption Budget 설정              
podDisruptionBudget:
  enabled: false
  # minAvailable 또는 maxUnavailable 중 하나만 설정해야 함
  minAvailable: 1
  # maxUnavailable: 1
  annotations: {}
